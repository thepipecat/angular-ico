{"version":3,"file":"angular-ico.component.js","sourceRoot":"","sources":["../.tmp/angular-ico.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ElementRef, Input, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ICO_CONFIGURATION, AngularIcoComponentConfig } from './angular-ico.config';\n\n@Component({\n  selector: 'ui-icon',\n  template: '<!-- icon space -->',\n  styles: [\":host{display:inline-block;vertical-align:middle;margin-top:-.2em}:host svg{fill:currentColor;width:100%;height:100%}\"]\n})\nexport class AngularIcoComponent implements OnInit {\n\n  @Input()\n  public name: string;\n\n  @Input()\n  public autosize: boolean = true;\n\n  constructor(\n    private el: ElementRef,\n    private http: HttpClient,\n    @Inject(ICO_CONFIGURATION) private cfg: AngularIcoComponentConfig\n  ) { }\n\n  ngOnInit() {\n    this.Setup();\n  }\n\n  private Setup(): void {\n    if (this.name != null) {\n      let key: string = `ui-icon-${this.name}`;\n      let content: string | null = null;\n\n      if (this.cfg.cache) {\n        content = window.sessionStorage.getItem(key);\n      }\n\n      if (content === null) {\n        this.http.get(`${this.cfg.baseUrl}/${this.name}.svg`, { responseType: 'text' })\n          .subscribe(content => {\n            if (this.cfg.cache) {\n              window.sessionStorage.setItem(key, content);\n            }\n\n            this.Transform(content);\n          }, error => {\n            console.warn('Icon', error);\n          });\n      } else {\n        this.Transform(content);\n      }\n    } else {\n      console.warn('Icon', 'Name is undefined.');\n    }\n  }\n\n  private Transform(content: string): void {\n    try {\n      let element: HTMLElement = this.el.nativeElement;\n\n      element.setAttribute('aria-hidden', 'true');\n\n      if (this.autosize) {\n        let tempElement: HTMLElement = document.createElement('div');\n\n        tempElement.innerHTML = content;\n\n        let first: Element | null = tempElement.firstElementChild;\n\n        if (first != null) {\n          first.setAttribute('width', '100%');\n          first.setAttribute('height', '100%');\n\n          element.innerHTML = first.outerHTML;\n        }\n      }\n      else {\n        element.innerHTML = content;\n      }\n    } catch (ex) {\n      console.warn(ex);\n    }\n  }\n\n}\n"]}