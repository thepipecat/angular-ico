{"version":3,"file":"angular-icon.component.js","sourceRoot":"","sources":["../.tmp/angular-icon.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAU,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACjF,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;;;uBAI7B,GAAG;;;gBAFvB,UAAU;;;qCAHX;;SAIa,0BAA0B;;IAiBrC,8BACU,EAAc,EACd,IAAgB,EAChB,GAA+B;QAF/B,OAAE,GAAF,EAAE,CAAY;QACd,SAAI,GAAJ,IAAI,CAAY;QAChB,QAAG,GAAH,GAAG,CAA4B;wBALd,IAAI;KAM1B;IAEL,uCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;IAEO,oCAAK,GAAb;QAAA,iBAmCC;QAlCC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,CAAC,OAAO,SAAI,IAAI,CAAC,IAAI,SAAM,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;iBAC5E,SAAS,CAAC,UAAA,QAAQ;gBACjB,IAAI,CAAC;oBACH,IAAI,OAAO,GAAgB,KAAI,CAAC,EAAE,CAAC,aAAa,CAAC;oBAEjD,OAAO,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;oBAE5C,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAClB,IAAI,WAAW,GAAgB,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;wBAE7D,WAAW,CAAC,SAAS,GAAG,QAAQ,CAAC;wBAEjC,IAAI,KAAK,GAAmB,WAAW,CAAC,iBAAiB,CAAC;wBAE1D,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;4BAClB,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;4BACpC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;4BAErC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;yBACrC;qBACF;oBACD,IAAI,CAAC,CAAC;wBACJ,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;qBAC9B;iBACF;gBAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;oBACZ,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBAClB;aACF,EAAE,UAAA,KAAK;gBACN,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aAC7B,CAAC,CAAC;SACN;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;SAC5C;KACF;;gBA1DF,SAAS,SAAC;oBACT,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,qBAAqB;oBAC/B,MAAM,EAAE,CAAC,uHAAuH,CAAC;iBAClI;;;gBAZ2B,UAAU;gBAC7B,UAAU;gBAGN,0BAA0B;;;yBAWpC,KAAK;6BAGL,KAAK;;+BAlBR;;SAaa,oBAAoB","sourcesContent":["import { Component, OnInit, ElementRef, Input, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class AngularIconComponentConfig {\n  baseUrl?: string = '/';\n}\n\n@Component({\n  selector: 'ui-icon',\n  template: '<!-- icon space -->',\n  styles: [\":host{display:inline-block;vertical-align:middle;margin-top:-.2em}:host svg{fill:currentColor;width:100%;height:100%}\"]\n})\nexport class AngularIconComponent implements OnInit {\n\n  @Input()\n  public name: string;\n\n  @Input()\n  public autosize: boolean = true;\n\n  constructor(\n    private el: ElementRef,\n    private http: HttpClient,\n    private cfg: AngularIconComponentConfig\n  ) { }\n\n  ngOnInit() {\n    this.Setup();\n  }\n\n  private Setup(): void {\n    if (this.name != null) {\n      this.http.get(`${this.cfg.baseUrl}/${this.name}.svg`, { responseType: 'text' })\n        .subscribe(response => {\n          try {\n            let element: HTMLElement = this.el.nativeElement;\n\n            element.setAttribute('aria-hidden', 'true');\n\n            if (this.autosize) {\n              let tempElement: HTMLElement = document.createElement('div');\n\n              tempElement.innerHTML = response;\n\n              let first: Element | null = tempElement.firstElementChild;\n\n              if (first != null) {\n                first.setAttribute('width', '100%');\n                first.setAttribute('height', '100%');\n\n                element.innerHTML = first.outerHTML;\n              }\n            }\n            else {\n              element.innerHTML = response;\n            }\n          } catch (ex) {\n            console.warn(ex);\n          }\n        }, error => {\n          console.warn('Icon', error);\n        });\n    } else {\n      console.warn('Icon', 'Name is undefined.');\n    }\n  }\n\n}\n"]}